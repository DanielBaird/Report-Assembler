// Generated by CoffeeScript 1.3.3
(function() {

  window.RA || (window.RA = {});

  RA.Views || (RA.Views = {});

  RA.Views.App = Backbone.View.extend({
    tagName: 'div',
    className: 'app',
    docView: null,
    dataView: null,
    resView: null,
    initialize: function() {
      this.dataView = new RA.Views.DatasetList({
        model: this.model.datasets
      });
      this.docView = new RA.Views.DocumentList({
        model: this.model.documents
      });
      this.resView = new RA.Views.Result({
        model: this.model.result
      });
      this.dataView.on('dataSelected', this.selectData, this);
      this.docView.on('docSelected', this.selectDoc, this);
      return console.log("init-ing a RA.Views.App");
    },
    refresh: function() {
      return this.model.fetch();
    },
    selectData: function(cid) {
      console.log("switching to data " + cid);
      this.dataView.deselectAllExcept(cid);
      return this.resView.model.set({
        'data': this.dataView.model.getByCid(cid)
      });
    },
    selectDoc: function(cid) {
      console.log("switching to doc " + cid);
      this.docView.deselectAllExcept(cid);
      return this.resView.model.set({
        'doc': this.docView.model.getByCid(cid)
      });
    },
    render: function() {
      var html;
      html = "<div class=\"header\">\n	<h1>Report Assembler</h1>\n</div>\n\n<div class=\"matcher clearfix\">\n</div>\n\n<div class=\"footer\">footer</div>";
      this.$el.html(html);
      this.$el.find('.matcher').append(this.dataView.render().el);
      this.$el.find('.matcher').append(this.docView.render().el);
      this.$el.find('.matcher').after(this.resView.render().el);
      return this;
    }
  });

}).call(this);
